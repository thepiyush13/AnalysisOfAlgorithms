{"name":"Analysisofalgorithms","tagline":"This repository contains advanced techniques for the design and analysis of algorithms, and explores a variety of applications.","body":"### Analysis Of Algorithms\r\nAlgorithm design and analysis is a fundamental and important part of computer science. \r\nThis repository contains advanced techniques for the design and analysis of algorithms, and explores a variety of applications.   \r\nThe topics and applications that coverd include greedy algorithms, network algorithms and network design, huffman codes and data compression, NP-hardness, approximation and randomized algorithms.\r\nIt Also contains various useful ideas, including randomization, probabilistic analysis, amortized analysis, competitive analysis, eigenvalues, linear and semi-definite programming, high dimensional geometry, and random walks. \r\n### Topics Covered\r\n* pseudo-code for describing algorithms\r\n* big-Oh notation and complexity analysis\r\n* related mathematics foundations\r\n* data structures such as lists, stacks, queues, and binary trees\r\n* sorting: insertion sort, selection sort, mergesort, quicksort, heapsort, radix sort\r\n* selection problem\r\n* basic graph concepts and representations\r\n* depth-first search and breadth-first search\r\n* Dijkstra shortest path algorithm\r\n* Dijkstra-Prim minimum spanning tree algorithm\r\n* the algorithm for testing biconnectivity\r\n* Strassen’s matrix multiplication algorithm\r\n* Warshall’s transitive closure algorithm\r\n* general idea of P, NP, and NP-completeness\r\n* search tree structures (worst case analysis)\r\n* union and find (amortized analysis)\r\n* topological sort (application of DFS)\r\n* strongly connected components (application of DFS)\r\n* minimum spanning tree algorithms (greedy algorithms, including improved Kruskal’s algorithm\r\nand Prim’s algorithm)\r\n* single-source shortest path algorithms (greedy algorithms, including Dijkstra’s algorithm\r\nand Bellman-Ford algorithm)\r\n* maximum flow\r\n* graph matching\r\n* string and sequence algorithms\r\n* NP-completeness\r\n* approximation algorithms\r\n* randomized algorithms\r\n* parameterized algorithms\r\n* bigdata algorithms\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}